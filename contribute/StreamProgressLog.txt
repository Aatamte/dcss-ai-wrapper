RECAP FROM LAST TIME (Feb 11, 2021):
1. (DONE!) write player current health and maximum health to the gamestate.pddl file
2. (DONE!)add heal action to the pddl domain file
2.5. (DONE!) connect pddl action to the webserver action
3. (DONE) add new goal capability to select the goal of current health == maximum health
   whenever current health is < 50% of maximum


Stream on Feb 18, 2021:
1. (DONE) Discussion: Why I'm doing this
2. (DONE) Add code to catch new g values (solves the smoke problem from last time)
3. (DONE) Better monster goal; separate out attack from movement actions
    a. (DONE) Separate move_and_attack actions in move and attack
    b. (DONE) Write out pddl for the has_monster predicate
    c. (DONE) Make the attack action have an effect where the monster is no longer at that tile
    d. (DONE) Add attack monster goals into the goal selection part of the planning agent
4. Decouple goal selection from planning; if goal changes, re-plan
    a. Make everything goal oriented with a goal selection function
        i. make traveling down via stairs goal oriented
            *. (DONE)write an action model for traveling stairs down
            *. (DONE)add new predicates to the pddl from gamestate
            *. (DONE) add new common knowledge to the pddl
    b. (LEFT OFF HERE) Test goal selection with every action
        i. *** Issue was that the agent seems to be replanning for the same goal, which shouldn't be happening
        ii. ALSO LEFT OFF ADDING INDIVIUAL PLACES in the general knowledge file
            NEXT TIME - need to make player place unique, can't use place predicate
5. (Bonus) Figure out how to reconnect to an existing game (Quality of Life Improvement)


Stream on Feb 25, 2021:
1. (DONE) Pick up where we left off - decoupling the goal selection with every action
2. Allow the agent to reconnect in the middle of a game
   2.1: Need a way to determine whether a game already exists
   2.2: Make sure that parsing of messages sent when connecting to an existing game is working
        (LEFT OFF) - When checking the websocket messages being sent using chrome's developer
                     tools we see that there are 13+ binary messages being sent, however we're
                      only getting a few of these through our websocket connection.

             Next time start off looking at game_connection.py: get_all_server_messages()
3. Begin looking at vector representations of the state (to support reinforcement learning)

Stream on March 3rd, 2021:
1. Finish refactoring the websocket connection code
1.1. Test an agent can connect and play, for a new game
1.2. (LEFT OFF HERE) Fix problems with creating a new game and updating the gamestate object
2. (DONE) Develop an agent that can connect in the middle of a game, and test!
3. Rename game_connection_4
4. Clean up print statements for early menus


Stream on March 11th, 2021:
0. (DONE) Introduction
1. (DONE) Demo Reconnecting in the middle of a game is now working
2. (DONE) Demo increasing speed is working
3. (DONE) Get seeded games to work
4. (DONE) Get tutorial games to work
4. Get sprint games to work
5. (DONE (no, but really it is done)) Restart the game if the player dies
6. (DONE) Handle the case when the weapon menu is optional
7. Handle the case where planner doesn't like closed doors
7. BONUS - add item goals

Tonight's Stream on March 18th, 2021:
1. (DONE) Get sprint games to work
2. Get autokill game to work when script is stopped
3. Get item pickup and stair goals to work!
4. Get item equip-ing goals to work
5. Get potion/scroll/food consume-ing goals to work
6. Debug monster issues



Future issues to solve:
* Issue with monsters.... plants are considered monsters when they shouldnt be...
* Solve problem where planner doesn't attack monster if one cell away
* Detect when someone is spectating, and print special information if they are
* only select heal goal if there are no monsters nearby
* check if time (from the game) has changed - if not we have a problem
* investigate situation where monsters are not being seen
* add smoke to the objects that can be detected in cells
* shallow and deep water can have the same symbol